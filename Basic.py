# Q.1 Program to determine whether to accept a result or discard it
# Input will be three different numbers, if two numbers are same then accept result else print "ERROR"
print("\nQ.1 Program to determine whether to accept a result or discard it")
result_1 = input("Enter result 1:")
result_2 = input("Enter result 2:")
result_3 = input("Enter result 3:")
results = [result_1,result_2,result_3]
if results.count(result_1)>1:
    print("Result is:", result_1)
elif results.count(result_2)>1:
    print("Result is:", result_2)
elif results.count(result_3)>1:
    print("Result is:", result_3)
else:
    print("ERROR")

# Q.2 Function that calculates the price on an item on sale, given the regular price and the sales percentage
print("\nQ.2 Function that calculates the price on an item on sale, given the regular price and the sales percentage")

def calculate_discounted_price(regular_price, sale_percent):
    discounted_price = regular_price - (regular_price*sale_percent/100)
    return discounted_price

regular_price = float(input("Enter the regular price of the item $:"))
sale_percent = float(input("Enter the sale percent of the item $:"))
discounted_price = calculate_discounted_price(regular_price,sale_percent)
print("The discounted price of the item is $"+str(discounted_price))

#Q.3 Demonstrate the use of math.pow(x,y)
import math
print("Q.3 Demonstrate the use of math.pow(x,y)")
x = int(input("Please enter the value of x:"))
y = int(input("Please enter the value of y:"))
print("The result of x^y is :",math.pow(x,y))

#Q.4 Calculate the time taken to serve the entire queue, 4 minutes to serve 1 customer
print("\nQ.4 Calculate the time taken to serve the entire queue")
no_of_customers = int(input("Please enter the no. of customers in line:"))
print("Total time taken to serve the entire queue will be", 4*no_of_customers,"minutes")

#Q.5 Calculate the expected revenue that will be generated by the shop over the next month
print("\nQ.5 Calculate the expected revenue that will be generated by the shop over the next month")
helmet_cost = 50; bike_cost = 250
sales_of_helmet = 0
sales_of_bike = int(input("Please enter the expected sales of bikes:"))
if sales_of_bike>5:
    sales_of_helmet = sales_of_bike//5
expected_revenue = (sales_of_helmet*helmet_cost)+(sales_of_bike*bike_cost)
print("Expected revenue of next month is $"+str(expected_revenue))

#Q.6 Demonstrate the Wheat and chessboard problem
print("\nQ.6 Demonstrate the Wheat and chessboard problem")
no_of_grains = 0
for i in range(0,64):
    no_of_grains = no_of_grains+pow(2,i)
print("There will be total",no_of_grains," wheat grains on the chessboard ")

#Q.7 Greet the user with his full name using string concatination
print("Q.7 Greet the user with his full name using string concatination")
first_name = input("What is your first name? ")
last_name = input("What is your last name? ")
print("Hello,",first_name,last_name,"!")

#Q.8 Displays the batting average for a baseball player
print("\nQ.8 Displays the batting average for a baseball player")
player_name = input("What is the player's name? ")
hits = eval(input("How many hits? "))
at_bats = eval(input("How many at-bats? "))
print(player_name.strip()+"'s","batting average is",round(hits/at_bats,3))

#Q.9 calculate how long it takes a photo from Curiosity to reach NASA when Mars is at its closest orbit to Earth, a distance of about 34 million miles.
print("\nQ.9 Calculate how long it takes a photo from Curiosity to reach NASA when Mars is at its closest orbit to Earth, a distance of about 34 million miles")
speed_of_light_miles_per_sec = 186000
distance_in_miles = 34000000
print("The photo from Curiosity reaches NASA in",distance_in_miles/speed_of_light_miles_per_sec,"seconds when Mars is at its closest orbit of earth")



